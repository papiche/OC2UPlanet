#!/bin/bash
########################################################################
# Quick Test of All Cesium Nodes (without sending messages)
########################################################################

source ~/.zen/Astroport.ONE/tools/my.sh

TEST_PUBKEY="DsEx1pS33vzYZg4MroyBV9hCw98j1gtHEhwiZ5tK7ech"

echo "=== Quick Test of All Cesium Nodes ==="
echo ""
echo "Test pubkey: $TEST_PUBKEY"
echo ""

# All known Cesium nodes
CESIUM_NODES=(
    "https://g1.data.brussels.ovh"
    "https://g1data.dynssl.com"
    "https://g1.data.e-is.pro"
    "https://g1.data.pini.fr"
    "https://g1.data.gchange.fr"
    "https://g1.data.le-sou.org"
    "https://g1.data.creationmonetaire.info"
    "https://g1.data.monnaie-libre.fr"
)

# Arrays to store results
WORKING_NODES=()
FAILED_NODES=()

echo "Testing connectivity and profile endpoints..."
echo ""

# Test each node
for node in "${CESIUM_NODES[@]}"; do
    echo -n "Testing $node... "
    
    # Test basic connectivity
    if curl -s --connect-timeout 5 "$node" >/dev/null 2>&1; then
        echo -n "✓ reachable, "
        
        # Test profile endpoint
        profile_url="$node/user/profile/$TEST_PUBKEY"
        if curl -s --connect-timeout 5 "$profile_url" >/dev/null 2>&1; then
            echo "✓ profile OK"
            WORKING_NODES+=("$node")
        else
            echo "✗ profile failed"
            FAILED_NODES+=("$node")
        fi
    else
        echo "✗ not reachable"
        FAILED_NODES+=("$node")
    fi
done

echo ""
echo "=== Results Summary ==="
echo "✅ Working nodes (${#WORKING_NODES[@]}):"
for node in "${WORKING_NODES[@]}"; do
    echo "  - $node"
done

echo ""
echo "❌ Failed nodes (${#FAILED_NODES[@]}):"
for node in "${FAILED_NODES[@]}"; do
    echo "  - $node"
done

echo ""
echo "📊 Statistics:"
echo "  Total tested: ${#CESIUM_NODES[@]}"
echo "  Working: ${#WORKING_NODES[@]}"
echo "  Failed: ${#FAILED_NODES[@]}"

if [[ ${#CESIUM_NODES[@]} -gt 0 ]]; then
    success_rate=$(echo "scale=1; ${#WORKING_NODES[@]} * 100 / ${#CESIUM_NODES[@]}" | bc -l 2>/dev/null || echo "0")
    echo "  Success rate: ${success_rate}%"
fi

# Save results to .env file
if [[ ${#WORKING_NODES[@]} -gt 0 ]]; then
    echo ""
    echo "💾 Saving results to .env file..."
    
    # Create or update .env file
    cat > .env << EOF
# Cesium nodes configuration
# Generated by test_cesium_nodes.sh on $(date)

# Working Cesium nodes (tested and functional)
CESIUM_WORKING_NODES=${WORKING_NODES[*]}

# Primary Cesium node (first working node)
CESIUM_PRIMARY_NODE=${WORKING_NODES[0]}

# Failed nodes (for reference)
CESIUM_FAILED_NODES=${FAILED_NODES[*]}

# Test results summary
CESIUM_TOTAL_TESTED=${#CESIUM_NODES[@]}
CESIUM_WORKING_COUNT=${#WORKING_NODES[@]}
CESIUM_FAILED_COUNT=${#FAILED_NODES[@]}

# Original environment variables (if they exist)
$(env | grep -E '^(CAPTAINEMAIL|contactG1PUB|OCSLUG|OCAPIKEY)=' || true)
EOF

    echo "✅ .env file updated"
    echo "Primary node: ${WORKING_NODES[0]}"
else
    echo ""
    echo "❌ No working nodes found - .env file not updated"
fi

echo ""
echo "=== Next Steps ==="
if [[ ${#WORKING_NODES[@]} -gt 0 ]]; then
    echo "1. Test message sending: ./test_single_message.sh"
    echo "2. View node status: ./show_cesium_nodes.sh"
    echo "3. Send campaign: ./send_g1fablab_presentation.sh"
else
    echo "1. Check your internet connection"
    echo "2. Try again later"
    echo "3. Contact system administrator"
fi 